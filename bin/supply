#!/usr/bin/env bash
set -eo pipefail

BUILD_DIR=${1}
CACHE_DIR=${2}
DEPS_DIR=${3}
INDEX=${4}
BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))

echo "BUILDPACK_DIR   = ${BUILDPACK_DIR}"
echo "BUILD_DIR       = ${BUILD_DIR}"
echo "CACHE_DIR       = ${CACHE_DIR}"
echo "DEPS_DIR        = ${DEPS_DIR}"
echo "INDEX           = ${INDEX}"

# Pull in dependencies for future use of keytool - bundled with JDK
pushd "${CACHE_DIR}"
  curl -L -O https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz
  tar xzf OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz
  export PATH=$PWD/jdk-11.0.10+9/bin:$PATH
popd

# Reference keystore to be used with app
pushd "${DEPS_DIR}/${INDEX}"

# Environment variables for s3 Bucket - enables AWS CLI to add, download and modify files
# 1. Create a user provided serivce
# cf7 cups s3-credentials - p '{"AWS_ACCESS_KEY":"", "AWS_SECRET_KEY":"", "REGION":"", "BUCKET_NAME":""}'
# Bind cups to the app
# cf7 bind-service hello-world s3-credentials
# Can also be done in the manifest.yml
#   services:
#    - s3-credentials

#KEY=privateKey.key
#CERT=myCert.crt
#KEYSTORE=myKeystore.pfx
#echo Generate Key and Certificate
#openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout $KEY -out $CERT -subj '//CN=myorg.co.nz'
#echo Generating Keystore
#openssl pkcs12 -export -out $KEYSTORE -inkey $KEY -in $CERT -passout pass: -name "$KEYSTORE"
#ls
#echo Printing Keystore
#openssl pkcs12 -info -in $KEYSTORE -noout -passin pass:
popd

# Create a .profile folder within the build directory
mkdir -p "${BUILD_DIR}/.profile.d"
# Create a param to reference build .profile + script
# custom_credentials.sh will be run when the app starts. Can be named whatever you want.
CUSTOM_KEYSTORE_PATH="${BUILD_DIR}/.profile.d/s3_credentials.sh"
# Make CUSTOM_KEYSTORE available as env variable when the script is run.
#echo "export CUSTOM_KEYSTORE=/deps/${INDEX}/${KEYSTORE}" > "${CUSTOM_KEYSTORE_PATH}"
echo "CUSTOM_KEYSTORE_PATH = ${CUSTOM_KEYSTORE_PATH}"
echo $VCAPS_SERVICES}