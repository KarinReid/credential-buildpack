#!/usr/bin/env bash
set -eo pipefail

BUILD_DIR=${1}
CACHE_DIR=${2}
DEPS_DIR=${3}
INDEX=${4}

BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))

echo "BUILDPACK_DIR = ${BUILDPACK_DIR}"
echo "BUILD_DIR     = ${BUILD_DIR}"
echo "CACHE_DIR     = ${CACHE_DIR}"
echo "DEPS_DIR      = ${DEPS_DIR}"
echo "INDEX         = ${INDEX}"

# pushd: save current dir to stack. Move to new dir.
pushd "${DEPS_DIR}/${INDEX}"
KEY=privateKey.key
CERT=myCert.crt
KEYSTORE=myKeystore.pfx

echo Generate Key and Certificate
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout $KEY -out $CERT -subj '//CN=myorg.co.nz'
echo Generating Keystore
openssl pkcs12 -export -out $KEYSTORE -inkey $KEY -in $CERT -passout pass: -name "$KEYSTORE"
ls
echo Printing Keystore
openssl pkcs12 -info -in $KEYSTORE -noout -passin pass:
popd

# Create a .profile folder within the build directory
mkdir -p "${BUILD_DIR}/.profile.d"
# Create a param to reference build .profile + script
# custom_credentials.sh will be run when the app starts. Can be named whatever you want.
CUSTOM_KEYSTORE_PATH="${BUILD_DIR}/.profile.d/custom_credentials.sh"
# Make CUSTOM_KEYSTORE available as env variable when the script is run.
echo "export CUSTOM_KEYSTORE=/deps/${INDEX}/${KEYSTORE}" > "${CUSTOM_KEYSTORE_PATH}"